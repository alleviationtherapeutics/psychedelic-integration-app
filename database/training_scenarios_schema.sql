-- Training Scenarios Database Schema\n-- Add this to your Supabase database\n\n-- Create training_scenarios table\nCREATE TABLE training_scenarios (\n  id UUID DEFAULT gen_random_uuid() PRIMARY KEY,\n  category TEXT NOT NULL,\n  user_message TEXT NOT NULL,\n  good_response TEXT NOT NULL,\n  approach TEXT,\n  triggers TEXT[] DEFAULT '{}',\n  therapeutic_notes TEXT,\n  nervous_system_considerations TEXT,\n  created_at TIMESTAMPTZ DEFAULT NOW(),\n  updated_at TIMESTAMPTZ DEFAULT NOW(),\n  created_by UUID REFERENCES auth.users(id),\n  is_active BOOLEAN DEFAULT TRUE\n);\n\n-- Create indexes for performance\nCREATE INDEX idx_training_scenarios_category ON training_scenarios(category);\nCREATE INDEX idx_training_scenarios_triggers ON training_scenarios USING GIN(triggers);\nCREATE INDEX idx_training_scenarios_active ON training_scenarios(is_active);\nCREATE INDEX idx_training_scenarios_created_at ON training_scenarios(created_at);\n\n-- Enable Row Level Security\nALTER TABLE training_scenarios ENABLE ROW LEVEL SECURITY;\n\n-- RLS Policies\n-- Allow users to read all active scenarios\nCREATE POLICY \"Allow read access to active scenarios\" ON training_scenarios\n  FOR SELECT USING (is_active = true);\n\n-- Allow authenticated users to insert scenarios\nCREATE POLICY \"Allow authenticated users to insert scenarios\" ON training_scenarios\n  FOR INSERT WITH CHECK (auth.role() = 'authenticated');\n\n-- Allow users to update their own scenarios\nCREATE POLICY \"Allow users to update own scenarios\" ON training_scenarios\n  FOR UPDATE USING (auth.uid() = created_by);\n\n-- Create scenario categories lookup\nCREATE TABLE scenario_categories (\n  id UUID DEFAULT gen_random_uuid() PRIMARY KEY,\n  name TEXT UNIQUE NOT NULL,\n  description TEXT,\n  emoji TEXT,\n  sort_order INTEGER DEFAULT 0,\n  created_at TIMESTAMPTZ DEFAULT NOW()\n);\n\n-- Insert default categories\nINSERT INTO scenario_categories (name, description, emoji, sort_order) VALUES\n('difficult_visions', 'Dark, scary, or challenging visual experiences', '👁️‍🗨️', 1),\n('mystical_experiences', 'Unity, oneness, divine connection experiences', '✨', 2),\n('entity_encounters', 'Meeting beings, guides, or other entities', '👽', 3),\n('past_trauma', 'Processing traumatic memories or experiences', '🩹', 4),\n('nature_visions', 'Plants, animals, natural world experiences', '🌿', 5),\n('geometric_patterns', 'Sacred geometry, fractals, mathematical visions', '🔮', 6),\n('emotional_processing', 'Intense emotions, crying, release', '💧', 7),\n('body_sensations', 'Physical sensations, energy, movement', '🫧', 8),\n('nothing_happened', 'No significant visuals or experiences', '🤷', 9),\n('integration_challenges', 'Difficulty making sense of the experience', '🧩', 10);\n\n-- Create scenario effectiveness tracking\nCREATE TABLE scenario_usage (\n  id UUID DEFAULT gen_random_uuid() PRIMARY KEY,\n  scenario_id UUID REFERENCES training_scenarios(id),\n  session_id UUID REFERENCES sessions(id),\n  user_message TEXT,\n  claude_response TEXT,\n  user_rating INTEGER CHECK (user_rating >= 1 AND user_rating <= 5),\n  effectiveness_notes TEXT,\n  created_at TIMESTAMPTZ DEFAULT NOW()\n);\n\n-- Enable RLS on usage tracking\nALTER TABLE scenario_usage ENABLE ROW LEVEL SECURITY;\n\nCREATE POLICY \"Allow users to track their own usage\" ON scenario_usage\n  FOR ALL USING (session_id IN (\n    SELECT id FROM sessions WHERE user_id = auth.uid()\n  ));